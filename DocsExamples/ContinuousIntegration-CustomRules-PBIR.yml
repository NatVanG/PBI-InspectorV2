trigger: none

pool:
  vmimage: 'windows-latest'

stages:
 - stage: Build
   jobs:

    - job: Build_Reports
      steps:
        - checkout: self
          path: 'self'
        - task: PowerShell@2
          displayName: 'Download PBI Inspector'
          inputs:
            targetType: inline
            script: |
              $path = "$(Build.SourcesDirectory)"
              $tempPath = "$path\_temp"
              $toolPath = "$path\_Tools\PBIInspector"
              New-Item -ItemType Directory -Path $tempPath -ErrorAction SilentlyContinue | Out-Null

              Write-Host "##[debug]Downloading PBI Inspector"
              $downloadUrl = "https://github.com/NatVanG/PBI-InspectorV2/releases/latest/download/win-x64-CLI.zip" 
              $zipFile = "$tempPath\PBIRInspector.zip"
              Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
              Expand-Archive -Path $zipFile -DestinationPath $toolPath -Force                            
 
        - task: PowerShell@2
          displayName: 'Run Report Rules'
          inputs:
            targetType: inline
            script: |
                  $path = "$(Build.SourcesDirectory)"
                  $rulesPath = "$path\rules"
                  $tempPath = "$path\_temp"
                  $toolPath =  "$path\_Tools\PBIInspector\win-x64\CLI\PBIRInspectorCLI.exe"

                  $itemsFolders = Get-ChildItem  -Path $path -recurse -include *.pbir
                  $rulesFiles = Get-ChildItem -Path $rulesPath -recurse -include *.json

                  foreach($itemFolder in $itemsFolders)
                  {	
                      $itemPath = $itemFolder.Directory.FullName
                      
                      Write-Host "##[group]Running rules for: '$itemPath'"

                        foreach($rulesFile in $rulesFiles)
                        {
                            $rulesFilePath = $rulesFile.FullName
                            Write-Host "##[group]Rules path: '$rulesFilePath'"
                            Start-Process -FilePath "$toolPath" -ArgumentList "-pbipreport ""$itemPath"" -rules ""$rulesFilePath"" -formats ""ADO""" -NoNewWindow -Wait
                        }

                      Write-Host "##[endgroup]"
                  }